#!/usr/bin/env bash

set -euo
segment=$1

for i in 1 2 3 4; do 
    for j in 1 2 3 4; do 
	cd "cam$i""-ccd$j""/$segment"
	#do smooth the images
	##for s in $(ls -d slice*); do
	##    cd $s
	##    pwd
	##    python ~/image_sub/pipeline/util/quick_smooth.py &
	##    cd .. 
	##done 
	##wait
	#do subtraction
	for s in $(ls -d slice*); do
	    cd $s
	    pwd
	    srun --job-name="subtract_cam${i}-ccd${j}" \
		 --output=${LOG_DIR}/%x.o%j --error=${LOG_DIR}/%x.e%j \
		 --partition=nocona \
		 --account=${ACCOUNT} \
		 --nodes 1 --cpus-per-task 1 \
		 --ntasks-per-node=1\
		 ${ISIS_DIR}/subtract.csh & 
	    cd .. 
	done
	echo "waiting on image subtract"
	wait
	echo "done!"
	#do columns
	for s in $(ls -d slice*); do
	    cd $s
	    srun --job-name="strap_correct_cam${i}-ccd${j}" \
		 --output=${LOG_DIR}/%x.o%j --error=${LOG_DIR}/%x.e%j \
		 --partition=nocona \
		 --account=${ACCOUNT} \
		 --nodes 1 --cpus-per-task 1 \
		 --ntasks-per-node=1 \
		 ${PIPELINE_DIR}/util/correct_straps.py & 
	    cd .. 
	done
	echo "waiting on strap correction"
	wait
	echo "done!"
	#median filter
	for s in $(ls -d slice*); do
	    cd $s
	    srun --job-name="median_filter_cam${i}-ccd${j}" \
		 --output=${LOG_DIR}/%x.o%j --error=${LOG_DIR}/%x.e%j \
		 --partition=nocona \
		 --account=${ACCOUNT} \
		 --nodes 1 --cpus-per-task 1 \
		 --ntasks-per-node=1 \
		 ${PIPELINE_DIR}/util/median_filter_diff_row_col.py & 
	    cd .. 
	done
	echo "waiting on median filter"
	wait 
	echo "done!"
	##for slice in $(ls -d slice*); do
        ##    cd $slice
	##    
        ##    for p in $(ls ../psf_file*fits); do
        ##        ln -s $p
        ##    done
        ##    ln -s ../psf_table
	##    cd ..
	##done
	cd ../../
    done
done

